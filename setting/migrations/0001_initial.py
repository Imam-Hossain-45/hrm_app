# Generated by Django 2.2.1 on 2019-11-19 07:16
import datetime
import json

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
from django.utils import timezone
from setting.models import Countries, States, Cities


def load_data(apps, schema_editor):
    f = open('setting/json_file/countries_states_cities.json', 'r')
    json_data = json.load(f)

    for obj in json_data:
        if obj['name'] == 'countries':
            for country in obj['data']:
                c = Countries(id=country['id'], name=country['name'], code=country['code'],
                              dial_code=country['dial_code'], currency=country['currency'])
                c.save()
        if obj['name'] == 'states':
            for state in obj['data']:
                s = States(id=state['id'], country_id=state['country_id'], name=state['name'], created_at=datetime.datetime.now())
                s.save()
        if obj['name'] == 'cities':
            for city in obj['data']:
                ct = Cities(id=city['id'], state_id=city['state_id'], name=city['name'])
                ct.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('parent_item', models.CharField(blank=True, choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/branches/')),
                ('different_physical_address', models.BooleanField(blank=True, default=False)),
                ('different_virtual_address', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('branch_start_date', models.DateField(blank=True, null=True)),
                ('branch_end_date', models.DateField(blank=True, null=True)),
                ('is_head_office', models.BooleanField(default=False, help_text='Specify whether this branch is a head office')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_belongs_to_branch', to='setting.Branch')),
            ],
            options={
                'verbose_name_plural': 'branches',
            },
        ),
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('parent_item', models.CharField(blank=True, choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/business_units/')),
                ('different_physical_address', models.BooleanField(blank=True, default=False)),
                ('different_virtual_address', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('business_unit_start_date', models.DateField(blank=True, null=True)),
                ('business_unit_end_date', models.DateField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
            ],
            options={
                'verbose_name_plural': 'BusinessUnits',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/companies/')),
                ('name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=100)),
                ('ownership_type', models.CharField(choices=[('public-limited', 'Public Limited'), ('public-limited', 'Joint Venture'), ('public-limited', 'Proprietor'), ('public-limited', 'Private Limited'), ('public-limited', 'Partnership'), ('public-limited', 'Others')], max_length=20)),
                ('establishment_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('mother_company', models.BooleanField(blank=True, default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('company_start_date', models.DateField(blank=True, null=True)),
                ('company_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(blank=True, max_length=11, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('dial_code', models.CharField(max_length=255, null=True)),
                ('currency', models.CharField(max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('parent_item', models.CharField(blank=True, choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/departments/')),
                ('different_physical_address', models.BooleanField(blank=True, default=False)),
                ('different_virtual_address', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('department_start_date', models.DateField(blank=True, null=True)),
                ('department_end_date', models.DateField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_belongs_to_branch', to='setting.Branch')),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_belongs_to_bu', to='setting.BusinessUnit')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_belongs_to_department', to='setting.Department')),
            ],
            options={
                'verbose_name_plural': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('short_code', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('parent_item', models.CharField(blank=True, choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/divisions/')),
                ('different_physical_address', models.BooleanField(blank=True, default=False)),
                ('different_virtual_address', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('division_start_date', models.DateField(blank=True, null=True)),
                ('division_end_date', models.DateField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_belongs_to_branch', to='setting.Branch')),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_belongs_to_bu', to='setting.BusinessUnit')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_belongs_to_department', to='setting.Department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_belongs_to_division', to='setting.Division')),
            ],
            options={
                'verbose_name_plural': 'divisions',
            },
        ),
        migrations.CreateModel(
            name='EmploymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=True)),
            ],
            options={
                'verbose_name_plural': 'Employment Types',
            },
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('different_from_parent', models.BooleanField(blank=True, default=False)),
                ('new_created', models.BooleanField(blank=True, default=False)),
                ('title', models.CharField(max_length=50)),
                ('short_description', models.CharField(max_length=255)),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('attachment_title', models.CharField(blank=True, max_length=50)),
                ('attachment_file', models.ImageField(blank=True, null=True, upload_to='uploads/identifications')),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('identification_start_date', models.DateField(blank=True, null=True)),
                ('identification_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=True)),
            ],
            options={
                'verbose_name_plural': 'Job Status',
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(max_length=255)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('area', models.CharField(blank=True, max_length=255)),
                ('postal_code', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('address_start_date', models.DateField(blank=True, null=True)),
                ('address_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('project_logo', models.ImageField(blank=True, null=True, upload_to='uploads/projects/')),
                ('belongs_to', models.CharField(blank=True, choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=50)),
                ('different_physical_address', models.BooleanField(blank=True, default=False)),
                ('different_virtual_address', models.BooleanField(blank=True, default=False)),
                ('deleted', models.BooleanField(blank=True, default=False)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('project_start_date', models.DateField(blank=True, null=True)),
                ('project_end_date', models.DateField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(blank=True, choices=[('facebook.com', 'facebook.com'), ('twitter.com', 'twitter.com'), ('instagram.com', 'instagram.com')], max_length=50)),
                ('link', models.URLField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('link_start_date', models.DateField(blank=True, null=True)),
                ('link_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address_type', models.CharField(blank=True, choices=[('phone', 'Phone'), ('email', 'Email'), ('website', 'Website'), ('fax', 'Fax')], max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('address_start_date', models.DateField(blank=True, null=True)),
                ('address_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Countries')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_virtual_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_vir_add_parent', to='setting.VirtualAddress')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Project')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_social_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_soc_link_parent', to='setting.SocialLink')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Project')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_physical_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_phy_add_parent', to='setting.PhysicalAddress')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_identification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_id_parent', to='setting.Identification')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationalStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.CharField(choices=[('company', 'Company'), ('branch', 'Branch'), ('business-unit', 'Business Unit'), ('division', 'Division'), ('department', 'Department')], max_length=20)),
                ('parent_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.OrganizationalStructure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeBankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_no', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.Bank')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.EmployeeIdentification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_inherited_vir', to='setting.Division')),
                ('inherited_virtual_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_division', to='setting.VirtualAddress')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_inherited_soc', to='setting.Division')),
                ('inherited_social_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_social_link_for_division', to='setting.SocialLink')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_inherited_phy', to='setting.Division')),
                ('inherited_physical_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_division', to='setting.PhysicalAddress')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DivisionIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_inherited_id', to='setting.Division')),
                ('inherited_identification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_identification_for_division', to='setting.Identification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_inherited_vir', to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_virtual_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_department', to='setting.VirtualAddress')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_inherited_soc', to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_social_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_social_link_for_department', to='setting.SocialLink')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_inherited_phy', to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_physical_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_department', to='setting.PhysicalAddress')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_inherited_id', to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_identification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_identification_for_department', to='setting.Identification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='department',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_belongs_to_division', to='setting.Division'),
        ),
        migrations.CreateModel(
            name='CompanyVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanySocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='company',
            name='industry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.Industry'),
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.States')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessUnitVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_inherited_vir', to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_virtual_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_bus', to='setting.VirtualAddress')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessUnitSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_inherited_soc', to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_social_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_social_link_for_bus', to='setting.SocialLink')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessUnitPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_inherited_phy', to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_physical_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_bus', to='setting.PhysicalAddress')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessUnitIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('business_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_unit_inherited_id', to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_identification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_identification_for_bus', to='setting.Identification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='businessunit',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company'),
        ),
        migrations.AddField(
            model_name='businessunit',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department'),
        ),
        migrations.AddField(
            model_name='businessunit',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division'),
        ),
        migrations.CreateModel(
            name='BranchVirtualAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_inherited_vir', to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_virtual_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_branch', to='setting.VirtualAddress')),
                ('virtual_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.VirtualAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BranchSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_inherited_soc', to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_social_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_social_link_for_branch', to='setting.SocialLink')),
                ('social_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.SocialLink')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BranchPhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_inherited_phy', to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_physical_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_phy_add_for_branch', to='setting.PhysicalAddress')),
                ('physical_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.PhysicalAddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BranchIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inherited', models.BooleanField(blank=True, default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Branch')),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.Identification')),
                ('inherited_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_inherited_id', to='setting.Branch')),
                ('inherited_business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.BusinessUnit')),
                ('inherited_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company')),
                ('inherited_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Department')),
                ('inherited_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Division')),
                ('inherited_identification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inherited_identification_for_branch', to='setting.Identification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='business_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_belongs_to_bu', to='setting.BusinessUnit'),
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.Company'),
        ),
        migrations.AddField(
            model_name='branch',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_belongs_to_department', to='setting.Department'),
        ),
        migrations.AddField(
            model_name='branch',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_belongs_to_division', to='setting.Division'),
        ),
        migrations.RunPython(load_data),
    ]
